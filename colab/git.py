# -*- coding: utf-8 -*-
"""git.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c7q90d3a8d6SVwighP5Ccu17k-b_QV2R

# Конфиг
"""

import importlib
import os
import requests
import sys
import subprocess

from google.colab import userdata

#Среды разработки - {'CoLab': True, 'DeepNote': False, ...}
envOn = 'CoLab'

envConfig = {
    "isSetTrace": {
        "CoLab": False,
        "DeepNote": True,
        "ReplIt": False
    },
    "githubRepoUp": {
        "CoLab": "/content/",
        "DeepNote": "/datasets/_deepnote_work/",
        "ReplIt": "/1/2/"
    }
}

if envOn == 'CoLab':
  public_token = userdata.get('public_token')
  private_token = userdata.get("PAT")
elif envOn == 'DeepNote' or envOn == 'ReplIt':
  public_token = os.environ["PUBLIC_TOKEN"]
  private_token = os.environ["PAT"]

user_name = "dchizhikov"
repo_name_git = "git"

repo_up = envConfig["githubRepoUp"][envOn]
repo_name = "databases" #git #UML #databases #Telegram #tg_bot
myRepo = repo_up+repo_name
repo_url = "https://github.com/"+user_name+"/"+repo_name

_token = private_token #[public_token, private_token]

branch = "origin_451F"
remote_branch = "main"

"""# Запуск"""

os.system(f"rm -rf {myRepo}") #!rm -rf $myRepo
os.system(f"rm -rf {repo_up+repo_name_git}")

url = "https://raw.githubusercontent.com/"+user_name+"/"+repo_name_git+"/main/modules/git_com.py"
response = requests.get(url)

with open('git_com.py', 'w') as f:
  f.write(response.text)

import git_com as gc
importlib.reload(gc)

gc.git_clone_private(user_name, repo_name_git, repo_up, _token)
gc.git_config(user_name)
gc.git_remote(repo_up+repo_name_git, repo_name_git, branch, user_name, _token)
gc.git_pull(branch, remote_branch)

gc.git_clone_private(user_name, repo_name, repo_up, _token)
gc.git_config(user_name)
gc.git_remote(myRepo, repo_name, branch, user_name, _token)
gc.git_pull(branch, remote_branch)

"""# Код"""

source_file = f'{repo_up}{repo_name_git}/main_up_abstract.py'
destination_file = f'{repo_up}main_base.py'
if not os.path.exists(destination_file):
  os.system(f'cp {source_file} {destination_file}')

isBot = True
run_arg = userdata.get('bot_token') if isBot else ''

try: subprocess.run(['python', '/content/main_base.py', run_arg], check=True)
except KeyboardInterrupt: print("Остановлено вручную")
except subprocess.CalledProcessError as e: print(f"Произошла ошибка: {e}")
except Exception as e: print(f"Произошла ошибка: {e}")

"""# Фикс"""

os.chdir(myRepo)
gc.git_add() #!git add .
message = f'{repo_name} bot-0.2 commit message'
gc.git_commit(message)
gc.git_push(branch, remote_branch)

os.chdir(repo_up+repo_name_git)
gc.git_add() #!git add .
message = f'git t-0.4 commit message'
gc.git_commit(message)
gc.git_push(branch, remote_branch)